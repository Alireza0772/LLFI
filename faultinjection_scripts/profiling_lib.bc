; ModuleID = 'profiling_lib.c'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-f128:128:128-n8:16:32"
target triple = "i386-pc-linux-gnu"

%struct.FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct.FILE*, i32 }

@count = unnamed_addr global i32 0
@prof_option = common unnamed_addr global i32 0
@profileFileName = common unnamed_addr global [80 x i8] zeroinitializer, align 32
@.str = private unnamed_addr constant [14 x i8] c".all.prof.txt\00", align 1
@.str1 = private unnamed_addr constant [10 x i8] c".prof.txt\00", align 1
@.str2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@profileFile = common unnamed_addr global %struct.FILE* null
@stderr = external unnamed_addr global %struct.FILE*
@.str3 = private unnamed_addr constant [34 x i8] c"Unable to open profiling file %s\0A\00", align 4
@.str4 = private unnamed_addr constant [18 x i8] c"BranchCount = %d\0A\00", align 1
@.str5 = private unnamed_addr constant [24 x i8] c"DataVariableCount = %d\0A\00", align 1
@.str6 = private unnamed_addr constant [15 x i8] c"AllCount = %d\0A\00", align 1
@.str7 = private unnamed_addr constant [25 x i8] c"BackwardSliceCount = %d\0A\00", align 1

define void @doProfiling(i32 %option) nounwind {
entry:
  %option_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %option, i32* %option_addr
  %0 = load i32* %option_addr, align 4
  store i32 %0, i32* @prof_option, align 4
  %1 = load i32* @count, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @count, align 4
  br label %return

return:                                           ; preds = %entry
  ret void
}

define void @endProfiling(i8* %appName) nounwind {
entry:
  %appName_addr = alloca i8*, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i8* %appName, i8** %appName_addr
  %0 = load i8** %appName_addr, align 4
  %1 = call i8* @strcpy(i8* noalias getelementptr inbounds ([80 x i8]* @profileFileName, i32 0, i32 0), i8* noalias %0) nounwind
  %2 = load i32* @prof_option, align 4
  %3 = icmp eq i32 %2, 2
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = call i8* @strcat(i8* noalias getelementptr inbounds ([80 x i8]* @profileFileName, i32 0, i32 0), i8* noalias getelementptr inbounds ([14 x i8]* @.str, i32 0, i32 0)) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %5 = call i8* @strcat(i8* noalias getelementptr inbounds ([80 x i8]* @profileFileName, i32 0, i32 0), i8* noalias getelementptr inbounds ([10 x i8]* @.str1, i32 0, i32 0)) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = call %struct.FILE* @fopen(i8* noalias getelementptr inbounds ([80 x i8]* @profileFileName, i32 0, i32 0), i8* noalias getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)) nounwind
  store %struct.FILE* %6, %struct.FILE** @profileFile, align 4
  %7 = load %struct.FILE** @profileFile, align 4
  %8 = icmp eq %struct.FILE* %7, null
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %9 = load %struct.FILE** @stderr, align 4
  %10 = call i32 (%struct.FILE*, i8*, ...)* @fprintf(%struct.FILE* noalias %9, i8* noalias getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8]* @profileFileName, i32 0, i32 0)) nounwind
  br label %bb13

bb4:                                              ; preds = %bb2
  %11 = load i32* @prof_option, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %13 = load i32* @count, align 4
  %14 = load %struct.FILE** @profileFile, align 4
  %15 = call i32 (%struct.FILE*, i8*, ...)* @fprintf(%struct.FILE* noalias %14, i8* noalias getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0), i32 %13) nounwind
  br label %bb12

bb6:                                              ; preds = %bb4
  %16 = load i32* @prof_option, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %18 = load i32* @count, align 4
  %19 = load %struct.FILE** @profileFile, align 4
  %20 = call i32 (%struct.FILE*, i8*, ...)* @fprintf(%struct.FILE* noalias %19, i8* noalias getelementptr inbounds ([24 x i8]* @.str5, i32 0, i32 0), i32 %18) nounwind
  br label %bb12

bb8:                                              ; preds = %bb6
  %21 = load i32* @prof_option, align 4
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %23 = load i32* @count, align 4
  %24 = load %struct.FILE** @profileFile, align 4
  %25 = call i32 (%struct.FILE*, i8*, ...)* @fprintf(%struct.FILE* noalias %24, i8* noalias getelementptr inbounds ([15 x i8]* @.str6, i32 0, i32 0), i32 %23) nounwind
  br label %bb12

bb10:                                             ; preds = %bb8
  %26 = load i32* @prof_option, align 4
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %28 = load i32* @count, align 4
  %29 = load %struct.FILE** @profileFile, align 4
  %30 = call i32 (%struct.FILE*, i8*, ...)* @fprintf(%struct.FILE* noalias %29, i8* noalias getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i32 %28) nounwind
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10, %bb9, %bb7, %bb5
  %31 = load %struct.FILE** @profileFile, align 4
  %32 = call i32 @fclose(%struct.FILE* %31) nounwind
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  br label %return

return:                                           ; preds = %bb13
  ret void
}

declare i8* @strcpy(i8* noalias, i8* noalias) nounwind

declare i8* @strcat(i8* noalias, i8* noalias) nounwind

declare %struct.FILE* @fopen(i8* noalias, i8* noalias)

declare i32 @fprintf(%struct.FILE* noalias, i8* noalias, ...) nounwind

declare i32 @fclose(%struct.FILE*)
